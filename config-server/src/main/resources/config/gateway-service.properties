# --------------------------------------------
# Application Configuration
# --------------------------------------------
spring.application.name=${APPLICATION_NAME}
server.port=${SERVER_PORT}

# --------------------------------------------
# Logging Configuration
# --------------------------------------------
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=TRACE

# --------------------------------------------
# Route Definitions
# --------------------------------------------

# Route 1: Forward /api/users/** to user-service (port 8081)
spring.cloud.gateway.server.webflux.routes[0].id=user-service
spring.cloud.gateway.server.webflux.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/api/users/**
spring.cloud.gateway.server.webflux.routes[0].filters[0]=CircuitBreaker=name=eComCircuitBreaker,fallbackUri=forward:/fallback/users

# Route 2: Forward /api/products/** to product-service (port 8082)
spring.cloud.gateway.server.webflux.routes[1].id=product-service
spring.cloud.gateway.server.webflux.routes[1].uri=lb://PRODUCT-SERVICE
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/api/products/**
spring.cloud.gateway.server.webflux.routes[1].filters[0]=CircuitBreaker=name=eComCircuitBreaker,fallbackUri=forward:/fallback/products

# Route 3: Forward /api/orders/** and /api/cart/** to order-service (port 8083)
spring.cloud.gateway.server.webflux.routes[2].id=order-service
spring.cloud.gateway.server.webflux.routes[2].uri=lb://ORDER-SERVICE
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/api/orders/**
spring.cloud.gateway.server.webflux.routes[2].predicates[1]=Path=/api/cart/**
spring.cloud.gateway.server.webflux.routes[2].filters[0]=CircuitBreaker=name=eComCircuitBreaker,fallbackUri=forward:/fallback/orders

# =============================================
# Actuator Configuration
# =============================================
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.info.env.enabled=true
management.health.circuitbreakers.enabled=true

# ==============================================
# Distributed Tracing - Sampling Configuration
# ==============================================
management.tracing.sampling.probability=1.0

# ===============================
# Resilience4j Circuit Breaker
# ===============================
resilience4j.circuitbreaker.instances.eComCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.eComCircuitBreaker.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.eComCircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.eComCircuitBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.eComCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.eComCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.eComCircuitBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.eComCircuitBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
