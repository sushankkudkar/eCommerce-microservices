# =============================================
# Application Configuration
# =============================================
spring.application.name=${APPLICATION_NAME}
server.port=${SERVER_PORT}
app.message=Hello from application.properties

# =============================================
# Logging Configuration
# =============================================
logging.file.name=logs/${spring.application.name}.log
logging.logback.rollingpolicy.max-file-size=5MB
logging.logback.rollingpolicy.max-history=7

# =============================================
# PostgreSQL Database Configuration
# =============================================
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# =============================================
# JPA & Hibernate
# =============================================
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

# =============================================
# RabbitMQ Configuration
# =============================================
spring.rabbitmq.host=${RABBITMQ_HOST}
spring.rabbitmq.port=${RABBITMQ_PORT}
spring.rabbitmq.username=${RABBITMQ_USERNAME}
spring.rabbitmq.password=${RABBITMQ_PASSWORD}
spring.rabbitmq.virtual-host=${RABBITMQ_VHOST}
spring.rabbitmq.connection-timeout=${RABBITMQ_CONN_TIMEOUT}

# RabbitMQ Listener Retry Settings
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.max-attempts=5
spring.rabbitmq.listener.simple.retry.initial-interval=2000
spring.rabbitmq.listener.simple.acknowledge-mode=auto

# =============================================
# Eureka Client Configuration
# =============================================
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# =============================================
# Actuator Configuration
# =============================================
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.shutdown.enabled=true
management.info.env.enabled=true
management.health.circuitbreakers.enabled=true

# =============================================
# Actuator Info Metadata
# =============================================
info.app.name=E-Commerce Product Application
info.app.version=1.0.0
info.app.description=An online shopping platform providing a variety of products and services.
info.app.author=ESBit
info.app.license=MIT
info.app.contact.email=support@ecommerce.com

# =============================================
# Metrics Configuration
# =============================================
management.metrics.enable.jvm=true
management.metrics.enable.process=true
management.metrics.enable.system=true

# =============================================
# Tracing Configuration
# =============================================
management.tracing.sampling.probability=1.0

# ===============================
# Resilience4j Circuit Breaker
# ===============================
resilience4j.circuitbreaker.instances.productService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.productService.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.productService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.productService.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.productService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.productService.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.productService.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.productService.automaticTransitionFromOpenToHalfOpenEnabled=true

# ===============================
# Resilience4j Retry
# ===============================
resilience4j.retry.instances.retryBreaker.maxAttempts=5
resilience4j.retry.instances.retryBreaker.waitDuration=500ms
resilience4j.retry.instances.retryBreaker.intervalFunction.type=exponential
resilience4j.retry.instances.retryBreaker.intervalFunction.initialInterval=500ms
resilience4j.retry.instances.retryBreaker.intervalFunction.multiplier=1.5
resilience4j.retry.instances.retryBreaker.intervalFunction.maxInterval=5s
resilience4j.retry.instances.retryBreaker.retryExceptions=java.io.IOException,java.sql.SQLException
resilience4j.retry.instances.retryBreaker.ignoreExceptions=java.lang.IllegalArgumentException
resilience4j.retry.instances.retryBreaker.failAfterMaxAttempts=false

# ===============================
# Resilience4j TimeLimiter
# ===============================
resilience4j.timelimiter.instances.productService.timeoutDuration=3s
resilience4j.timelimiter.instances.productService.cancelRunningFuture=true

# ===============================
# Feign Client Timeouts
# ===============================
spring.cloud.openfeign.client.config.productService.connectTimeout=2000
spring.cloud.openfeign.client.config.productService.readTimeout=3000

# ===============================
# RabbitMq Exchange, Queue, Routing Info
# ===============================
rabbitmq.exchange.name=order.exchange
rabbitmq.queue.name=order.queue
rabbitmq.routing.key=order.tracking